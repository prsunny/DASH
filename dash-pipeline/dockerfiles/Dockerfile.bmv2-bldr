# This Dockerfile is used to make/run bmv2 switch.
# It uses grpc 1.43.2 as base to ensure right lib versions.
FROM sonicdash.azurecr.io/dash-grpc:1.43.2 as grpc

# https://hub.docker.com/r/p4lang/behavioral-model
#FROM p4lang/behavioral-model:latest
#latest on 2022-07-03:
FROM p4lang/behavioral-model@sha256:ce45720e28a96a50f275c1b511cd84c2558b62f2cf7a7e506765183bc3fb2e32
LABEL maintainer="SONIC-DASH Community"
LABEL description="DASH pipeline P4 Behavioral Model build toolchain"

# Configure make to run as many parallel jobs as cores available
ARG available_processors
ARG MAKEFLAGS=-j$available_processors

# Select the compiler to use.
# We install the default version of GCC (GCC 9), as well as clang 8 and clang 10.
ARG sswitch_grpc=yes
ARG CC=gcc
ARG CXX=g++
ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ENV GIT_SSL_NO_VERIFY=true

ENV PI_DEPS automake \
            build-essential \
            g++ \
            libboost-dev \
            libboost-system-dev \
            libboost-thread-dev \
            libtool \
            libtool-bin \
            pkg-config \
            make

ENV LD_LIBRARY_PATH=/usr/local/lib
ENV DEPS $PI_DEPS 

WORKDIR /

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    $DEPS
    
    #  && \
    #   apt-get purge -qq $DEPS && \
    #   apt-get autoremove --purge -qq && \
    #   rm -rf /var/cache/apt/* /var/lib/apt/lists/* 

WORKDIR /usr/local/lib/

# Copy libabsl .a files from p4pi, make shared lib for our use and delete .a's
COPY --from=grpc /usr/local/lib/lib*grpc*.so* \
        /usr/local/lib/libabsl*.so* \
        /usr/local/lib/libgpr*.so* \
        /usr/local/lib/libupb*.so* \
        /usr/local/lib/libre2*.so* \
        /usr/local/lib/libaddress_sorting*.so* \
        /usr/local/lib/libssl*.so* \
        /usr/local/lib/libcrypto*.so* \
        ./
   
ARG user
ARG uid
ARG group
ARG guid
ARG hostname

ENV BUILD_HOSTNAME $hostname
ENV USER $user

RUN groupadd -f -r -g $guid $group

RUN useradd $user -l -u $uid -g $guid -d /var/$user -m -s /bin/bash

RUN echo "$user ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers

USER $user

CMD /bin/bash
